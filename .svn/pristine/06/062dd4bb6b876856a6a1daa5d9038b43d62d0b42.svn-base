<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../.resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../.resources/report.gif" type="image/gif"/><title>SignUpTest.java</title><link rel="stylesheet" href="../../../.resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../.resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../../../.sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">test (3 Ιουν 2015 4:27:49 πμ)</a> &gt; <a href="../../index.html" class="el_group">BuddyChallenge</a> &gt; <a href="../index.html" class="el_bundle">test</a> &gt; <a href="index.source.html" class="el_package">buddychallenge.gui</a> &gt; <span class="el_source">SignUpTest.java</span></div><h1>SignUpTest.java</h1><pre class="source lang-java linenums">package buddychallenge.gui;

import static org.junit.Assert.*;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;


import org.junit.Before;
import org.junit.Test;

import buddychallenge.gui.presenters.SignUpPresenter;
import buddychallenge.gui.stubs.SignUpStub;
import buddychallenge.services.SignUpService;
import buddychallenge.util.EmailAddress;
import buddychallenge.util.Gender;
import buddychallenge.util.Password;
import buddychallenge.util.Username;

<span class="fc" id="L21">public class SignUpTest {</span>

	private SignUpPresenter presenter;
	private SignUpStub stub;
	private SignUpService service;

	@Before
	public void setUp() throws Exception {
<span class="fc" id="L29">		stub = new SignUpStub();</span>
<span class="fc" id="L30">		service = new SignUpService();</span>
<span class="fc" id="L31">		presenter = new SignUpPresenter(stub);</span>
<span class="fc" id="L32">		presenter.setService(service);</span>
<span class="fc" id="L33">	}</span>

	@Test
	public void wiring() {
<span class="fc" id="L37">		presenter.start();</span>
<span class="fc" id="L38">		assertTrue(stub.isOpened());</span>
<span class="fc" id="L39">	}</span>

	@Test
	public void updateValues(){
<span class="fc" id="L43">		String USERNAME = &quot;testUsername&quot;;</span>
<span class="fc" id="L44">		String PASSWORD = &quot;testPassword1&quot;;</span>
<span class="fc" id="L45">		String EMAIL = &quot;test@email.com&quot;;</span>
<span class="fc" id="L46">		String FNAME = &quot;TEST&quot;;</span>
<span class="fc" id="L47">		String LNAME = &quot;NAME&quot;;</span>
<span class="fc" id="L48">		int genderPos = 0;</span>
<span class="fc" id="L49">		String BIRTH = &quot;1-1-1980&quot;;</span>
<span class="fc" id="L50">		stub.setUsernameString(USERNAME);</span>
<span class="fc" id="L51">		stub.setPasswordString(PASSWORD);</span>
<span class="fc" id="L52">		stub.setEmailString(EMAIL);</span>
<span class="fc" id="L53">		stub.setFirstname(FNAME);</span>
<span class="fc" id="L54">		stub.setLastname(LNAME);</span>
<span class="fc" id="L55">		stub.setGenderPos(genderPos);</span>
<span class="fc" id="L56">		stub.setBirthDateString(BIRTH);</span>
		
<span class="fc" id="L58">		presenter.start();</span>
<span class="fc" id="L59">		presenter.action();</span>
<span class="fc" id="L60">		Object[] expecteds = { USERNAME, PASSWORD, EMAIL, FNAME, LNAME, genderPos, BIRTH};</span>
<span class="fc" id="L61">		Object[] actuals = { presenter.getUsernameString(),presenter.getPasswordString(), presenter.getEmailString()</span>
<span class="fc" id="L62">				,presenter.getFirstName(),presenter.getLastName(), presenter.getGenderPos(), presenter.getBirthDateString()};</span>
<span class="fc" id="L63">		assertArrayEquals(expecteds, actuals);</span>
<span class="fc" id="L64">	}</span>
	
	@Test
	public void signUpSuccess(){
<span class="fc" id="L68">		String USERNAME = &quot;testUsername2&quot;;</span>
<span class="fc" id="L69">		String PASSWORD = &quot;testPassword1&quot;;</span>
<span class="fc" id="L70">		String EMAIL = &quot;test@email.com&quot;;</span>
<span class="fc" id="L71">		String FNAME = &quot;TEST&quot;;</span>
<span class="fc" id="L72">		String LNAME = &quot;NAME&quot;;</span>
<span class="fc" id="L73">		int genderPos = 0;</span>
<span class="fc" id="L74">		String BIRTH = &quot;1-1-1980&quot;;</span>
<span class="fc" id="L75">		stub.setUsernameString(USERNAME);</span>
<span class="fc" id="L76">		stub.setPasswordString(PASSWORD);</span>
<span class="fc" id="L77">		stub.setEmailString(EMAIL);</span>
<span class="fc" id="L78">		stub.setFirstname(FNAME);</span>
<span class="fc" id="L79">		stub.setLastname(LNAME);</span>
<span class="fc" id="L80">		stub.setGenderPos(genderPos);</span>
<span class="fc" id="L81">		stub.setBirthDateString(BIRTH);</span>
		
<span class="fc" id="L83">		presenter.start();</span>
		
<span class="fc" id="L85">		service.setUsername(new Username(stub.getUsernameString()));</span>
<span class="fc" id="L86">		service.setPassword(new Password(stub.getPasswordString()));</span>
<span class="fc" id="L87">		service.setEmail(new EmailAddress(stub.getEmailString()));</span>
<span class="fc" id="L88">		service.setFirstname(new String(stub.getFirstName()));</span>
<span class="fc" id="L89">		service.setLastname(new String(stub.getLastName()));</span>
<span class="fc" id="L90">		service.setGender(Gender.Gender1);</span>
<span class="fc" id="L91">		SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd-mm-yy&quot;);</span>
<span class="fc" id="L92">		Date date = null;</span>
		try {
<span class="fc" id="L94">			date = sdf.parse(stub.getBirthDateString());</span>
<span class="pc" id="L95">		} catch (ParseException pe) {</span>
<span class="nc" id="L96">			System.out.println(&quot;parse exception&quot;);</span>
		}
<span class="nc" id="L98">		service.setBirthdate(date);</span>
		
<span class="nc" id="L100">		presenter.setService(service);</span>
<span class="nc" id="L101">		boolean error = presenter.action();</span>
<span class="nc" id="L102">		System.out.println(error);</span>
<span class="nc" id="L103">		assertFalse(error);</span>
		
<span class="nc" id="L105">	}</span>
	
	@Test
	public void closing() {
<span class="fc" id="L109">		presenter.start();</span>
<span class="fc" id="L110">		presenter.cancel();</span>

<span class="fc" id="L112">		assertFalse(stub.isOpened());</span>
<span class="fc" id="L113">	}</span>
	
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.eclemma.org/jacoco">JaCoCo</a> 0.7.2.201409121644</span>test (3 Ιουν 2015 4:27:49 πμ)</div></body></html>